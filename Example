if (isValidDateInput(startDate)) {
    try {
        SimpleDateFormat sdf = new SimpleDateFormat("MM-dd-yyyy");
        sDate = sdf.parse(startDate);
    } catch (ParseException e) {
        handleDateParseException(cceMsgResp);
        return cceMsgResp;
    }
} else {
    // Set to 30 days back.
    sDate = getDate30DaysBack();
}

// ...

private boolean isValidDateInput(String date) {
    return (date != null && date.trim().length() > 0) && !("null".equalsIgnoreCase(date));
}

private void handleDateParseException(CceMsgResp cceMsgResp) {
    Logger.error("Unable to parse the date");
    cceMsgResp.setErrorCode(EmailHistoryConstants.INVALID_DATE_FORMAT);
    cceMsgResp.setErrorMsgTxt(EmailHistoryConstants.INVALID_DATE_FORMAT_STARTDATE_MSG);
}

private Date getDate30DaysBack() {
    Calendar myCal = Calendar.getInstance();
    myCal.add(Calendar.MONTH, -1);
    return myCal.getTime();
}
