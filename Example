import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.core.ParameterizedTypeReference;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.test.web.client.MockRestServiceServer;
import org.springframework.web.client.RestTemplate;

import java.util.Collections;
import java.util.List;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.*;

class YourClassTest {

    @Mock
    private RestTemplate restTemplate;

    @Mock
    private YourPropertiesService props;

    @InjectMocks
    private YourClass yourClass;

    private MockRestServiceServer mockServer;

    @BeforeEach
    void setUp() {
        MockitoAnnotations.openMocks(this);
        mockServer = MockRestServiceServer.createServer(restTemplate);
    }

    @Test
    void testDoPost() throws Exception {
        // Arrange
        String url = "your-url";
        YourRequestObject requestObj = new YourRequestObject(/* provide necessary arguments */);
        HttpHeaders headers = new HttpHeaders();
        headers.setAccept(Collections.singletonList(MediaType.APPLICATION_JSON));
        headers.setContentType(MediaType.APPLICATION_JSON);

        when(props.getProperty(eq(EmailHistoryConstants.AUTH_HEADER), anyString())).thenReturn("your-auth-key");

        when(restTemplate.exchange(
                eq(url),
                eq(HttpMethod.POST),
                any(HttpEntity.class),
                any(ParameterizedTypeReference.class)
        )).thenReturn(ResponseEntity.ok(/* your mock response */));

        // Act
        List<EmailHistoryCacResponse> result = yourClass.doPost(url, requestObj, EmailHistoryCacResponse.class, 3, 5000, "your-operation");

        // Assert
        assertEquals(/* expected result */, result);

        // Verify that the restTemplate.exchange method was called with the correct arguments
        mockServer.verify();
    }
}
