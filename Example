import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.jdbc.support.rowset.SqlRowSet;
import static org.mockito.Mockito.*;

class YourClassTest {

    @InjectMocks
    private YourClass yourClass;

    @Mock
    private YourPropertiesService props; // Make sure to replace this with your actual service

    @Mock
    private SqlRowSet rowSet; // Mock SqlRowSet

    @Test
    void testMapRow() {
        // Initialize mocks
        MockitoAnnotations.openMocks(this);

        // Set up mock data
        when(rowSet.getString("templateId")).thenReturn("yourTemplateId");
        // Repeat for other fields...

        // Call the method
        CLTInformation cltInfo = yourClass.mapRow(rowSet, "yourApplicationId");

        // Assertions
        // Add assertions based on the expected behavior of the method and the data you provided
        assertEquals("yourTemplateId", cltInfo.getTemplateId());
        // Add more assertions for other fields...
    }

    // Add more test cases as needed to cover different scenarios

}
